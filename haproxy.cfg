# A bind line sets the IP address and port to listen on.
# HAProxy will try to establish a TCP connection every two seconds. 
# After three failed connections, the server is removed temporarily, 
# until HAProxy gets at least two successful connections, after which it 
# reinstates the server into the backend. You can customize these settings, 
# changing the interval, the number of failed checks that trigger a removal, 
# or the number of successful checks that reinstate the server.
# The inter parameter changes the interval between checks; 
# it defaults to two seconds. The fall parameter sets how many failed checks are allowed;
# it defaults to three. The rise parameter sets how many passing checks there must be before returning a 
# previously failed server to the rotation; it defaults to two. In the example below, we’ve set new values
# Yes — the TCP connection between the client and HAProxy is established the first time the client sends anything to 
# HAProxy (usually an HTTP request).
# Think of HAProxy’s stats as event counters + per-request timers that update independently for every request/stream
#  It sets timeouts for how long HAProxy should wait for a client to send data (timeout client), 
#  how long to wait when trying to connect to a backend server (timeout connect), 
#  how long to wait for the server to send back data (timeout server), 
#  how long to wait for the client to send a complete HTTP request (timeout http-request).
# XFF has to be initialised already 
# the proxy has to keep appending to the XFF
# haproxy with option forward for appends to the xff by defualt...but i guess that doesnt matter since we are taking the first one its intiialised 
# option forward for - Append HAProxy’s view?

defaults
  mode http
  balance roundrobin
  timeout connect 5s
  timeout server 600s 
  timeout http-request 10s

# a frontend that accepts requests from clients
frontend myfrontend
  bind 0.0.0.0:4000
  default_backend myservers

# servers that fulfill the requests
backend myservers
  option httpchk GET /healthy
  http-check expect status 200
  option forwardfor # automatically specifies the client ip in the XFF header. the client which did the connection to the haproxy server
  server s1 short_and_exact-api-1:7860 check inter 10s fall 5 rise 3
  server s2 short_and_exact-api-2:7860 check inter 10s fall 5 rise 3
  server s3 short_and_exact-api-3:7860 check inter 10s fall 5 rise 3
